@model IT_project.Models.Reservation

@{
    ViewBag.Title = "Accommodations";
}



<div style="width:100%;background-color:#004f83;margin-bottom:2em;padding:1em" class="float-left">
    <h1 class="float-left">@ViewBag.Title</h1>
    <button class="float-right" onclick="goBack()">Go Back</button>
</div>

    <!-- List of products -->
<article class="float-left" style="background:#0076a3">
    <ul class="img_list" data-bind="foreach: apartments" style="list-style:none">
        <li>
            <a data-bind="attr: { 'href': '@Url.Action("ApartmentsView", "Home")/aspx?apartmentId='+ApartmentId  }">
                <p data-bind="text : Name"></p>
                <img data-bind="attr : {src : ImageUrl,alt : Name}" style="width:9em;height:8em" />
            </a>
            <div>
                <button data-bind="click: addReservation" style="width:7.6em">Make a Reservation</button>
            </div>
        </li>

    </ul>


</article>

<!-- Cart -->
<aside id="cart" class="float-right" style="background-color:#004f83;padding:2em">
    <h1>Your reservation for</h1>
    <h2 data-bind="text : cart().Name"></h2>

    <form>
        From:
        @Html.EditorFor(model => model.From);
        <br/>
        To:
        @Html.EditorFor(model => model.To);
        
    </form>


    <table class="details ui-widget-content"></table>
    <div>
        <button data-bind="click: createReservation"> Create a reservation </button>
        <button data-bind="click: cart().removeReservation"> Clear </button>
    </div>
    
</aside>


@*<div id="orders-area" class="content">
        <!-- List of orders -->
        <div class="float-left">
            <h1>Your Orders</h1>
            <ul id="orders"></ul>
        </div>

        <div id="order-details" class="float-right">
            <h2>Order #<span></span></h2>
            <table class="details ui-widget-content"></table>
            <p>Total: <span></span></p>
        </div>
    </div>*@

<div class="spinner">
    Loading...
</div>


@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-2.2.0.js")"></script>
    <script type="text/javascript">

    function goBack() {
        window.history.back();
    }

    function goBack() {
        window.history.back();
    }

    var spinnerVisible = false;
    function showProgress() {
        if (!spinnerVisible) {
            $("div.spinner").fadeIn("fast");
            spinnerVisible = true;
        }
    };
    function hideProgress() {
        if (spinnerVisible) {
            var spinner = $("div.spinner");
            spinner.stop();
            spinner.fadeOut("fast");
            spinnerVisible = false;
        }
    };



    function AppViewModel() {
        var self = this;
        self.apartments = ko.observableArray();
        self.cart = ko.observable({Id:-1,Name:"Choose and apartment"});
        self.reservations = ko.observableArray();
        self.details = ko.observable();
        self.from = $("#@Html.IdFor(Model => Model.From)");
        self.to = $("#@Html.IdFor(Model => Model.To)");

        

        function ApartmentViewModel(root, apartment) {
            var apself = this;
            apself.ApartmentId = apartment.Id;
            apself.Name = apartment.Name;
            apself.Description = apartment.Description;
            apself.Rating = apartment.Rating;
            apself.ImageUrl = apartment.ImageUrl;

            apself.addReservation = function () {
                self.cart(apself);
            };

            apself.removeReservation = function () {
                self.cart({ Id: -1, Name: "Choose and apartment" });
                self.from.val('');
                self.to.val('');
            };
        }

        function ReservationDetailsViewModel(reservation) {
            var self = this;
            self.items = ko.observableArray();
            self.Id = reservation.Id;
            self.errorMessage = ko.observable();

            $.getJSON("../api/reservation/" + reservation.Id, function (reservation) {
                $.each(order.Details, function (index, item) {
                    self.items.push(item);
                })
            });
        };

        self.resetCart = function() {
            self.cart({ Id: -1, Name: "Choose and apartment" });
        }

        self.getDetails = function (order) {
            self.details(new ReservationDetailsViewModel(order));
        }

        self.createReservation = function () {
            if (self.cart().Id == -1) {
                alert("Please select an apartment");
                return;
            }
            var d1 = new Date(self.from.val().toString())
            var d2 = new Date(self.to.val().toString());
            if (d1.getTime > d2.getTime) {
                alert("Please select correct dates");
                return;
            }


                var jqxhr = $.ajax({
                    type: 'POST',
                    url: "../api/reservation/",
                    contentType: 'application/json; charset=utf-8',
                    data: ko.toJSON({ Customer: '@User.Identity.Name', From: new Date(self.from.val().toString()), To: new Date(self.to.val().toString()), ApartmentId: self.cart().ApartmentId }),
                    dataType: "json",
                    success: function (newReservation) {
                        self.resetCart();
                        self.reservations.push(newReservation);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        self.errorMessage = errorThrown;
                    }
                });
                debugger;
            
        };

        showProgress();
        $.getJSON("/api/apartments", function (apartments) {
            $.each(apartments, function (index, apartment) {
                self.apartments.push(new ApartmentViewModel(self, apartment));
            })
            hideProgress();
        });

    }

    $(document).ready(function () {
        ko.applyBindings(new AppViewModel());
    });

    </script>
}